<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.clouyun.charge.modules.charge.mapper.StationProfitMapper">
	
	<sql id="baseColumn">
		  this_.settlement_month,
		  this_.sp_id ,
		  this_.org_id ,
		  this_.org_name,
		  this_.station_id,
		  cs.station_name,
		  this_.station_total_power,
		  this_.station_target_charge,
		  this_.station_total_charge,
		  this_.station_goal_charge,
		  this_.station_test_charge,
		  this_.station_use_charge,
		  this_.station_office_charge,
		  this_.pile_total_loss,
		  this_.pile_total_power,
		  this_.station_target_income,
		  this_.order_income,
		  this_.in_pile_total_income,
		  this_.in_pile_pm_income,
		  this_.in_fac_rental_fee,
		  this_.in_park_rental_fee,
		  this_.in_land_rental_fee,
		  this_.fixed_income_subtotal,
		  this_.other_income,
		  this_.unfixed_income_subtotal,
		  this_.station_income_subtotal,
		  this_.ele_fee,
		  this_.water_fee,
		  this_.network_fee,
		  this_.divi_expend,
		  this_.ex_land_rental_fee,
		  this_.ex_land_rental_expend,
		  this_.ex_house_rental_fee,
		  this_.property_fee,
		  this_.artificial_fee,
		  this_.depre_fixed_asset,
		  this_.cost_amortization,
		  this_.parking_fee,
		  this_.fixed_expend_subtotal,
		  this_.repair_fee,
		  this_.low_consumable,
		  this_.other_expenses,
		  this_.unfixed_expend_subtotal,
		  this_.cost_total,
		  this_.station_gross_profit,
		  	this_.settlement_month,
		  	this_.station_target_charge_compare,
			this_.station_total_charge_compare,
			this_.station_target_income_compare,
			this_.fixed_income_subtotal_compare,
			this_.unfixed_income_subtotal_compare,
			this_.station_income_subtotal_compare,
			this_.fixed_expend_subtotal_compare,
			this_.unfixed_expend_subtotal_compare,
			this_.cost_total_compare,
			this_.station_gross_profit_compare,
			this_.station_type,
			this_.station_service_type,
			this_.station_coop_type,
			this_.group_monthly
	</sql>
	
	<sql id="selectiveSql">
		<where>
			<if test="stationType != null">
				and cs.station_type = #{stationType}
			</if>
			<if test="stationServiceType != null">
				and cs.service_type = #{stationServiceType}
			</if>
			<if test="stationCoopType != null">
				and cs.station_coop_type = #{stationCoopType}
			</if>
			<if test="settlementMonth != null">
				and this_.settlement_month = #{settlementMonth}
			</if>
			<if test="orgId != null">
				and this_.org_id = #{orgId}
			</if>
			<if test="orgName != null">
				and this_.org_Name LIKE CONCAT('%',#{orgName},'%' )
			</if>
			<if test="orgIds != null">
				AND this_.org_id in
				<foreach collection="orgIds" item="id" open="(" separator="," close=")">
					#{id}
				</foreach>
			</if>
			<if test="stationIds != null">
				AND this_.station_id in
				<foreach collection="stationIds" item="sId" open="(" separator="," close=")">
					#{sId}
				</foreach>
			</if>
		</where>
	</sql>
	
	<!-- 排序条件 -->
    <sql id="orderBy">
        <if test="sort!=null">
            ORDER BY ${sort} ${order}
        </if>
    </sql>
	
	<select id="queryStationProfit" resultType="DataVo">
		select 
		<include refid="baseColumn"/>
		from station_profit this_
			left OUTER join chg_station cs
				on this_.station_id = cs.STATION_ID
		<include refid="selectiveSql"/>
		<include refid="orderBy"/>
	</select>
	
	<select id="queryStationProfitCache" resultType="DataVo">
		select 
			spc_id,
			org_id,
			org_name,
			station_id,
			station_name,
			settlement_month,
			station_total_power,
			other_income,
			ele_fee,
			water_fee,
			repair_fee,
			low_consumable,
			other_expenses
		from
			station_profit_cache
		<where>
			<if test="settlementMonth != null">
				and settlement_month = #{settlementMonth}
			</if>
			<if test="orgIds != null">
				AND org_id in 
				<foreach collection="orgIds" item="orgId" open="(" separator="," close=")">
					#{orgId}
				</foreach>
			</if>
			<if test="stationIds != null">
				AND station_id in
				<foreach collection="stationIds" item="stationId" open="(" separator="," close=")">
					#{stationId}
				</foreach>
			</if>
		</where>
	</select>
	
	<select id="queryStationProfitByKey" resultType="DataVo">
		select 
		<include refid="baseColumn"/>
		from station_profit this_
		LEFT OUTER JOIN
			chg_station cs
				ON this_.station_id = cs.station_id
		<where>
			this_.sp_id = #{spId}
		</where>
	</select>
	
	<select id="queryProfitSubtotal" resultType="DataVo">
		select 
			sum(this_.station_target_charge)  all_station_target_charge,
			sum(this_.station_total_charge) as all_station_total_charge,
			sum(this_.station_target_income) as all_station_target_income,
			sum(this_.fixed_income_subtotal) as all_fixed_income_subtotal,
			sum(this_.unfixed_income_subtotal) as all_unfixed_income_subtotal,
			sum(this_.station_income_subtotal) as all_station_income_subtotal,
			sum(this_.fixed_expend_subtotal) as all_fixed_expend_subtotal,
			sum(this_.unfixed_expend_subtotal) as all_unfixed_expend_subtotal,
			sum(this_.cost_total) as all_cost_total,
			sum(this_.station_gross_profit) as all_station_gross_profit
		from
			station_profit this_
		LEFT OUTER join
			chg_station cs
				ON  this_.station_id = cs.station_id
		<include refid="selectiveSql"/>
	</select>
	
	<select id="queryIncomeTrends" resultType="DataVo">
		select 
			settlement_month,
			station_income_subtotal,
			cost_total,
			station_gross_profit
		from
			station_profit
		<where>
			station_id = #{stationId}
		</where>
		ORDER BY settlement_month desc
		limit 0,6
	</select>
	<!-- 新增 -->
	<insert id="batchInsert" parameterType="Map" keyProperty="spId" useGeneratedKeys="true">
		INSERT INTO station_profit_cache
		<trim prefix="(" suffix=")" suffixOverrides=",">
			org_id,
			org_Name,
			station_id,
			station_name,
			settlement_month,
			station_total_power,
			other_income,
			ele_fee,
			water_fee,
			repair_fee,
			low_consumable,
			other_expenses,
			write_time,
			update_time
		</trim>
		VALUES
		<foreach collection="list" item="sp" index="index" separator=",">
		(
			#{sp.orgId},
			#{sp.orgName},
			#{sp.stationId},
			#{sp.stationName},
			#{sp.settlementMonth},
			#{sp.stationTotalPower},
			#{sp.otherIncome},
			#{sp.eleFee},
			#{sp.waterFee},
			#{sp.repairFee},
			#{sp.lowConsumable},
			#{sp.otherExpenses},
			now(),now()
		  )
        </foreach>	
	</insert>
	<!-- 更新 -->
	<update id="batchUpdate">
		<foreach collection="list" item="sp" index="index" open="" close="" separator=";">
	        UPDATE station_profit_cache 
			<set>
				<if test="sp.stationTotalPower != null">station_total_power = #{sp.stationTotalPower},</if>
				<if test="sp.otherIncome != null">other_income = #{sp.otherIncome},</if>
				<if test="sp.eleFee != null">ele_fee = #{sp.eleFee},</if>
				<if test="sp.waterFee != null">water_fee = #{sp.waterFee},</if>
				<if test="sp.repairFee != null">repair_fee = #{sp.repairFee},</if>
				<if test="sp.lowConsumable != null">low_consumable = #{sp.lowConsumable},</if>
				<if test="sp.otherExpenses != null">other_expenses = #{sp.otherExpenses},</if>
				<if test="sp.updateTime != null">update_time = now(),</if>
			</set>
			<where>
				spc_id = #{sp.spcId}
			</where>
        </foreach>
	</update>
	
</mapper>
